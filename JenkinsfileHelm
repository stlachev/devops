pipeline {
    agent any
    options {
        ansiColor('xterm')
        // Only keep the 5 most recent builds
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }
    parameters { 
        choice(name: 'Helm_Action', choices: ['install', 'delete'], description: 'Actions in Helm') 
    }
    stages {
        stage('Preparing') {
            steps {
                sh 'echo Preparing'
            }
        }
        stage('Git Pulling') {
            steps {
                script {
                    git branch: 'main', 
                        credentialsId: 'git_credential',
                        url: 'https://github.com/stlachev/devops.git'
                    sh 'ls'
                }
            }
        }
        stage('Action') {
            steps {
                echo "Performing: helm ${params.Helm_Action}"
                withAWS(credentials: '56f0ac9b-0ef7-44a1-81a3-a3cf72459311', region: 'eu-central-1') {
                    script {
                        if (params.Helm_Action == 'install') {
                            sh 'cd helm/rails-application && helm install rails-application . --values values.yaml'
                        }   else if (params.Helm_Action == 'delete') {
                            sh 'cd helm/rails-application && helm delete rails-application'
                        } else {
                            error "Invalid value for Helm_Action: ${params.Helm_Action}"
                        }
                    }
                }
            }
        }
    }
}